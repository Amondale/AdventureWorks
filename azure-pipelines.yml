# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'AdventureWorks.sln'
  projectName: '**/src/AdventureWorks.API/AdventureWorks.API.csproj'
  unitTestProjectName: '**/tests/AdventureWorks.UnitTests/AdventureWorks.UnitTests.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: BuildAdventureWorksApi
  displayName: 'Build Adventure Works API'

  steps:  
  - script: set
    displayName: 'Print All Build Pipleline Variables'

  - task: NuGetToolInstaller@1
    displayName: 'NuGet tool installer'

  - task: NuGetCommand@2
    name: 'NuGetRestore'
    displayName: 'Restore NuGet Packages'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'

  - task: DotNetCoreCLI@2
    name: 'BuildSolution'
    displayName: 'Build Adventure Works Solution (dotnet build)'
    inputs:
      command: 'build'
      projects: 'AdventureWorks.sln'
      arguments: '--configuration $(buildConfiguration) --framework  "net6.0" /p:EnvironmentName=Production /p:PackageLocation="$(build.artifactStagingDirectory)"'

  - task: DotNetCoreCLI@2
    name: 'ExecuteUnitTests'
    displayName: 'Execute Adventure Works Unit Tests'
    inputs:
      command: 'test'
      projects: '$(solution)'
      testRunTitle: 'AdventureWorks UnitTests - $(Build.BuildNumber)'
      publishTestResults: true
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

  - task: DotNetCoreCLI@2
    name: 'Publish'
    displayName: 'Publish Adventure Works API Artifacts'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(projectName)'
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: false  
   
  - task: PublishBuildArtifacts@1
    name: 'PublishBuildArtifacts'
    displayName: 'Publish AdventureWorks Build Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'AzureTestProject'
      publishLocation: 'Container'
